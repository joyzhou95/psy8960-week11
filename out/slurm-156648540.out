── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.1     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
+ Fold01: intercept=TRUE 
- Fold01: intercept=TRUE 
+ Fold02: intercept=TRUE 
- Fold02: intercept=TRUE 
+ Fold03: intercept=TRUE 
- Fold03: intercept=TRUE 
+ Fold04: intercept=TRUE 
- Fold04: intercept=TRUE 
+ Fold05: intercept=TRUE 
- Fold05: intercept=TRUE 
+ Fold06: intercept=TRUE 
- Fold06: intercept=TRUE 
+ Fold07: intercept=TRUE 
- Fold07: intercept=TRUE 
+ Fold08: intercept=TRUE 
- Fold08: intercept=TRUE 
+ Fold09: intercept=TRUE 
- Fold09: intercept=TRUE 
+ Fold10: intercept=TRUE 
- Fold10: intercept=TRUE 
Aggregating results
Fitting final model on full training set
Warning messages:
1: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
2: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
3: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
4: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
5: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
6: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
7: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
8: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
9: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
10: In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
4.935 sec elapsed
Warning message:
In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
+ Fold01: alpha=0.10, lambda=8.211 
- Fold01: alpha=0.10, lambda=8.211 
+ Fold01: alpha=0.55, lambda=8.211 
- Fold01: alpha=0.55, lambda=8.211 
+ Fold01: alpha=1.00, lambda=8.211 
- Fold01: alpha=1.00, lambda=8.211 
+ Fold02: alpha=0.10, lambda=8.211 
- Fold02: alpha=0.10, lambda=8.211 
+ Fold02: alpha=0.55, lambda=8.211 
- Fold02: alpha=0.55, lambda=8.211 
+ Fold02: alpha=1.00, lambda=8.211 
- Fold02: alpha=1.00, lambda=8.211 
+ Fold03: alpha=0.10, lambda=8.211 
- Fold03: alpha=0.10, lambda=8.211 
+ Fold03: alpha=0.55, lambda=8.211 
- Fold03: alpha=0.55, lambda=8.211 
+ Fold03: alpha=1.00, lambda=8.211 
- Fold03: alpha=1.00, lambda=8.211 
+ Fold04: alpha=0.10, lambda=8.211 
- Fold04: alpha=0.10, lambda=8.211 
+ Fold04: alpha=0.55, lambda=8.211 
- Fold04: alpha=0.55, lambda=8.211 
+ Fold04: alpha=1.00, lambda=8.211 
- Fold04: alpha=1.00, lambda=8.211 
+ Fold05: alpha=0.10, lambda=8.211 
- Fold05: alpha=0.10, lambda=8.211 
+ Fold05: alpha=0.55, lambda=8.211 
- Fold05: alpha=0.55, lambda=8.211 
+ Fold05: alpha=1.00, lambda=8.211 
- Fold05: alpha=1.00, lambda=8.211 
+ Fold06: alpha=0.10, lambda=8.211 
- Fold06: alpha=0.10, lambda=8.211 
+ Fold06: alpha=0.55, lambda=8.211 
- Fold06: alpha=0.55, lambda=8.211 
+ Fold06: alpha=1.00, lambda=8.211 
- Fold06: alpha=1.00, lambda=8.211 
+ Fold07: alpha=0.10, lambda=8.211 
- Fold07: alpha=0.10, lambda=8.211 
+ Fold07: alpha=0.55, lambda=8.211 
- Fold07: alpha=0.55, lambda=8.211 
+ Fold07: alpha=1.00, lambda=8.211 
- Fold07: alpha=1.00, lambda=8.211 
+ Fold08: alpha=0.10, lambda=8.211 
- Fold08: alpha=0.10, lambda=8.211 
+ Fold08: alpha=0.55, lambda=8.211 
- Fold08: alpha=0.55, lambda=8.211 
+ Fold08: alpha=1.00, lambda=8.211 
- Fold08: alpha=1.00, lambda=8.211 
+ Fold09: alpha=0.10, lambda=8.211 
- Fold09: alpha=0.10, lambda=8.211 
+ Fold09: alpha=0.55, lambda=8.211 
- Fold09: alpha=0.55, lambda=8.211 
+ Fold09: alpha=1.00, lambda=8.211 
- Fold09: alpha=1.00, lambda=8.211 
+ Fold10: alpha=0.10, lambda=8.211 
- Fold10: alpha=0.10, lambda=8.211 
+ Fold10: alpha=0.55, lambda=8.211 
- Fold10: alpha=0.55, lambda=8.211 
+ Fold10: alpha=1.00, lambda=8.211 
- Fold10: alpha=1.00, lambda=8.211 
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.821 on full training set
6.621 sec elapsed
+ Fold01: mtry=  2, min.node.size=5, splitrule=variance 
- Fold01: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold01: mtry= 32, min.node.size=5, splitrule=variance 
- Fold01: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold01: mtry=535, min.node.size=5, splitrule=variance 
- Fold01: mtry=535, min.node.size=5, splitrule=variance 
+ Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold01: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold01: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold01: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold01: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=  2, min.node.size=5, splitrule=variance 
- Fold02: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold02: mtry= 32, min.node.size=5, splitrule=variance 
- Fold02: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold02: mtry=535, min.node.size=5, splitrule=variance 
- Fold02: mtry=535, min.node.size=5, splitrule=variance 
+ Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold02: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold02: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold02: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=  2, min.node.size=5, splitrule=variance 
- Fold03: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold03: mtry= 32, min.node.size=5, splitrule=variance 
- Fold03: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold03: mtry=535, min.node.size=5, splitrule=variance 
- Fold03: mtry=535, min.node.size=5, splitrule=variance 
+ Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold03: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold03: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold03: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=  2, min.node.size=5, splitrule=variance 
- Fold04: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold04: mtry= 32, min.node.size=5, splitrule=variance 
- Fold04: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold04: mtry=535, min.node.size=5, splitrule=variance 
- Fold04: mtry=535, min.node.size=5, splitrule=variance 
+ Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold04: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold04: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold04: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold04: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=  2, min.node.size=5, splitrule=variance 
- Fold05: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold05: mtry= 32, min.node.size=5, splitrule=variance 
- Fold05: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold05: mtry=535, min.node.size=5, splitrule=variance 
- Fold05: mtry=535, min.node.size=5, splitrule=variance 
+ Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold05: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold05: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold05: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=  2, min.node.size=5, splitrule=variance 
- Fold06: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold06: mtry= 32, min.node.size=5, splitrule=variance 
- Fold06: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold06: mtry=535, min.node.size=5, splitrule=variance 
- Fold06: mtry=535, min.node.size=5, splitrule=variance 
+ Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold06: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold06: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold06: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=  2, min.node.size=5, splitrule=variance 
- Fold07: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold07: mtry= 32, min.node.size=5, splitrule=variance 
- Fold07: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold07: mtry=535, min.node.size=5, splitrule=variance 
- Fold07: mtry=535, min.node.size=5, splitrule=variance 
+ Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold07: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold07: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold07: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=  2, min.node.size=5, splitrule=variance 
- Fold08: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold08: mtry= 32, min.node.size=5, splitrule=variance 
- Fold08: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold08: mtry=535, min.node.size=5, splitrule=variance 
- Fold08: mtry=535, min.node.size=5, splitrule=variance 
+ Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold08: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold08: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold08: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold08: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=  2, min.node.size=5, splitrule=variance 
- Fold09: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold09: mtry= 32, min.node.size=5, splitrule=variance 
- Fold09: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold09: mtry=535, min.node.size=5, splitrule=variance 
- Fold09: mtry=535, min.node.size=5, splitrule=variance 
+ Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold09: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold09: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold09: mtry=535, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=  2, min.node.size=5, splitrule=variance 
- Fold10: mtry=  2, min.node.size=5, splitrule=variance 
+ Fold10: mtry= 32, min.node.size=5, splitrule=variance 
- Fold10: mtry= 32, min.node.size=5, splitrule=variance 
+ Fold10: mtry=535, min.node.size=5, splitrule=variance 
- Fold10: mtry=535, min.node.size=5, splitrule=variance 
+ Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=  2, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry= 32, min.node.size=5, splitrule=extratrees 
- Fold10: mtry= 32, min.node.size=5, splitrule=extratrees 
+ Fold10: mtry=535, min.node.size=5, splitrule=extratrees 
- Fold10: mtry=535, min.node.size=5, splitrule=extratrees 
Aggregating results
Selecting tuning parameters
Fitting mtry = 535, splitrule = variance, min.node.size = 5 on full training set
48.968 sec elapsed
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold01: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold02: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold03: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold04: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold05: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold06: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold07: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold08: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold09: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds= 50, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=100, eta=0.3 
+ Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=0e+00, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-01, nrounds=150, eta=0.3 
+ Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=0e+00, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-01, alpha=1e-04, nrounds=150, eta=0.3 
+ Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
- Fold10: lambda=1e-04, alpha=1e-04, nrounds=150, eta=0.3 
Aggregating results
Selecting tuning parameters
Fitting nrounds = 100, lambda = 0.1, alpha = 1e-04, eta = 0.3 on full training set
255.318 sec elapsed
Aggregating results
Fitting final model on full training set
5.843 sec elapsed
Warning message:
In predict.lm(modelFit, newdata) :
  prediction from a rank-deficient fit may be misleading
Aggregating results
Selecting tuning parameters
Fitting alpha = 0.1, lambda = 0.804 on full training set
1.631 sec elapsed
Aggregating results
Selecting tuning parameters
Fitting mtry = 535, splitrule = variance, min.node.size = 5 on full training set
25.161 sec elapsed
Aggregating results
Selecting tuning parameters
Fitting nrounds = 50, lambda = 0.1, alpha = 0, eta = 0.3 on full training set
21.992 sec elapsed
